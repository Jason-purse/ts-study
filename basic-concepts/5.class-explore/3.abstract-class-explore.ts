/**
 * 抽象类
 *
 * 同其他编程语言一样, 抽象一种方法,具体子类具体实现 ..
 *
 * 实现多态 .. 继承 /  封装 / 多态
 *
 * 对于抽象工厂模式来说,抽象类简直就是为它而生 ...
 *
 * 例如一个汽车工厂,我们完全可以组合不同类型的发动机 / 轮胎 / 外壳形成不同配置的车 ..
 *
 * 那么 例如外形可能有很多,我们不可能一次性定义所有外壳 。。
 *
 * 那么一个抽象类,必须是abstract 关键字定义,抽象方法必须存在于抽象类中,并且抽象类无法实例化 ..
 */

abstract class Shape {

    abstract getShape(): [number, number];
}

